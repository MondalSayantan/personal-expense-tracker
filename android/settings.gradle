pluginManagement {
    def flutterSdkPath = {
        // First check for FLUTTER_ROOT env variable (set in CI environments)
        def sdkPath = System.getenv('FLUTTER_ROOT')
        
        // If not found and local.properties exists, try to get from there
        if (sdkPath == null) {
            def localProperties = new File("local.properties")
            if (localProperties.exists()) {
                Properties properties = new Properties()
                localProperties.withInputStream { properties.load(it) }
                sdkPath = properties.getProperty("flutter.sdk")
            }
        }
        
        // If still null, throw a more helpful error message
        if (sdkPath == null) {
            throw new GradleException(
                "Flutter SDK path not found. Either set FLUTTER_ROOT environment variable or " +
                "flutter.sdk in local.properties file."
            )
        }
        
        return sdkPath
    }()

    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version "8.2.1" apply false
    id "org.jetbrains.kotlin.android" version "1.8.22" apply false
}

include ":app"
