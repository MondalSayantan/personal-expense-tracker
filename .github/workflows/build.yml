name: Build and Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    # Add permission to create tags and releases
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get

      # Extract version from pubspec.yaml
      - name: Extract Version
        id: version
        run: |
          VERSION=$(grep -m 1 '^version:' pubspec.yaml | awk '{ print $2 }' | sed 's/+.*$//')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
      # Check if tag already exists
      - name: Check if tag exists
        id: check_tag
        run: |
          TAG_EXISTS=$(git ls-remote --tags origin refs/tags/v${{ steps.version.outputs.VERSION }} | wc -l)
          echo "TAG_EXISTS=$TAG_EXISTS" >> $GITHUB_OUTPUT
          
      - name: Build APK
        run: |
          flutter build apk --release --dart-define=MONGODB_URI=${{ secrets.MONGODB_URI }}
          # Debug output to verify APK was created
          ls -la build/app/outputs/flutter-apk/
          echo "APK size: $(du -h build/app/outputs/flutter-apk/app-release.apk | cut -f1)"
      
      # Create tag if it doesn't exist
      - name: Create Tag
        if: steps.check_tag.outputs.TAG_EXISTS == '0'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a v${{ steps.version.outputs.VERSION }} -m "Release v${{ steps.version.outputs.VERSION }}"
          git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git --tags

      # Create GitHub Release
      - name: Create Release
        if: steps.check_tag.outputs.TAG_EXISTS == '0'
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: Release v${{ steps.version.outputs.VERSION }}
          files: |
            build/app/outputs/flutter-apk/app-release.apk
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
